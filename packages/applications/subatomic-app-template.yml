apiVersion: v1
kind: Template
metadata:
  name: subatomic-app-template
  annotations:
    openshift.io/display-name: Subatomic Application Template
    description: |-
      Simple Subatomic Spring Boot application template.
      
      NOTE: This Template contains no Service or Route resources and therefore not suited for web applications.
    openshift.io/provider-display-name: Subatomic
    openshift.io/documentation-url: http://subatomic.bison.ninja
    openshift.io/support-url: http://subatomic.bison.ninja
    subatomic/version: '2.0'
    tags: java
    iconClass: icon-spring
labels:
  template: subatomic-app-template
objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: ${APP_NAME}      
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        template: subatomic-app-template
      name: ${APP_NAME}
    spec:
      replicas: 1    
      strategy:
        type: Rolling    
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APP_NAME}
            from:
              kind: ImageStreamTag
              name: ${APP_NAME}:${IMAGE_STREAM_TAG}
              namespace: ${IMAGE_STREAM_PROJECT}
          type: ImageChange
        - type: ConfigChange    
      selector:
        name: ${APP_NAME}      
      template:
        metadata:
          labels:
            name: ${APP_NAME}
        spec:
          containers:
            - name: ${APP_NAME}
              image: ' ' 
              env:
                - name: JAVA_MAX_CORE
                  value: ${LIMITS_CPU}
                - name: JAVA_OPTIONS
                  value: '-Djava.net.preferIPv4Stack=true -Djava.security.egd=file:/dev/./urandom -javaagent:/newrelic/newrelic.jar -Dnewrelic.config.file=/newrelic/newrelic.yml'
              ports:
                - name: http-8080
                  containerPort: 8080
                  protocol: TCP
              livenessProbe:
                httpGet:
                  path: ${ACTUATOR_CONTEXT_PATH}/health
                  port: http-8080
                  scheme: HTTP
                initialDelaySeconds: 30
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: ${ACTUATOR_CONTEXT_PATH}/info
                  port: http-8080
                  scheme: HTTP
              resources:
                limits:
                  cpu: ${LIMITS_CPU}
                  memory: ${LIMITS_MEMORY}
                requests:
                  cpu: ${REQUESTS_CPU}
                  memory: ${REQUESTS_MEMORY}                  
parameters:
  - name: APP_NAME
    displayName: Application name
    required: true        
  - name: IMAGE_STREAM_PROJECT
    displayName: OpenShift project
    description: >-
      The OpenShift project (namespace) where the application's ImageStream is located
    required: true        
  - name: IMAGE_STREAM_TAG
    displayName: Image stream tag
    value: latest
    required: true        
  - name: ACTUATOR_CONTEXT_PATH
    displayName: Spring Boot actuator context path
    description: >-
      The context path for the Spring Boot actuator. Typically applications using 
      Spring Boot 1.x would have a context path of '/' or '/management' and
      Spring Boot 2.x would have a path of '/actuator'
    required: false   
  - name: REQUESTS_CPU
    displayName: CPU resource request
    required: false
    value: '0'    
  - name: REQUESTS_MEMORY
    displayName: Memory resource request
    required: true
    value: 0Mi  
  - name: LIMITS_CPU
    displayName: CPU resource limit
    required: true
    value: '4'
  - name: LIMITS_MEMORY
    displayName: Memory resource limit
    required: false
    value: 512Mi